---
import Button from "./ui/button.astro";

// Determinar la URL base para la redirección
const baseUrl = import.meta.env.PROD ? 'https://sevillaremodeling.com' : '';
const redirectUrl = `${baseUrl}/thank-you`;
---

<!-- Formulario personalizado simple con manejo de envío por JavaScript -->
<div class="bg-white/80 backdrop-blur-sm p-6 rounded-lg shadow-md border border-white/30">
  <h3 class="text-2xl font-semibold text-gray-800 mb-6">Request a Free Quote</h3>
  
  <div id="successMessage" class="hidden bg-green-100 p-4 rounded-lg mb-6">
    <div class="flex items-center">
      <svg class="w-6 h-6 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
      </svg>
      <p class="text-green-700">Thank you! Your message has been sent successfully. We will respond soon.</p>
    </div>
  </div>
  
  <div id="errorMessage" class="hidden bg-red-100 p-4 rounded-lg mb-6">
    <div class="flex items-center">
      <svg class="w-6 h-6 text-red-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <p class="text-red-700">There was a problem sending your message. Please try again.</p>
    </div>
  </div>
  
  <form 
    id="contactForm"
    action="https://formsubmit.co/sevillaremodeling504@gmail.com" 
    method="POST"
    class="space-y-5">
    
    <!-- FormSubmit Configuration -->
    <input type="hidden" name="_subject" value="New Quote Request - Sevilla Remodeling">
    <input type="hidden" name="_template" value="table">
    <input type="hidden" name="_captcha" value="false">
    <input type="hidden" name="_next" value={redirectUrl}>
    <input type="hidden" name="_autoresponse" value="Gracias por contactarnos. Hemos recibido tu mensaje y te responderemos pronto.">
    <input type="hidden" name="_webhook" value="https://sevillaremodeling.com/api/form-webhook">
    
    <!-- Name -->
    <div class="mb-5">
      <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name *</label>
      <input
        id="name"
        name="name"
        type="text"
        placeholder="Your name"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-2 border-gray-300 focus:border-blue-500 focus:ring-blue-100"
      />
    </div>
    
    <!-- Email -->
    <div class="mb-5">
      <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email *</label>
      <input
        id="email"
        name="email"
        type="email"
        placeholder="your@email.com"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-2 border-gray-300 focus:border-blue-500 focus:ring-blue-100"
      />
    </div>
    
    <!-- Phone -->
    <div class="mb-5">
      <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone</label>
      <input
        id="phone"
        name="phone"
        type="tel"
        placeholder="(123) 456-7890"
        class="w-full px-4 py-3 border-2 placeholder:text-gray-500 rounded-md outline-none focus:ring-2 border-gray-300 focus:border-blue-500 focus:ring-blue-100"
      />
    </div>
    
    <!-- Service Type -->
    <div class="mb-5">
      <label for="service" class="block text-sm font-medium text-gray-700 mb-1">Service Type</label>
      <select
        id="service"
        name="service"
        class="w-full px-4 py-3 border-2 rounded-md outline-none focus:ring-2 border-gray-300 focus:border-blue-500 focus:ring-blue-100">
        <option value="">Select a service</option>
        <option value="painting">Painting</option>
        <option value="remodeling">Remodeling</option>
        <option value="carpentry">Carpentry</option>
        <option value="landscaping">Landscaping</option>
        <option value="other">Other</option>
      </select>
    </div>
    
    <!-- Message -->
    <div class="mb-5">
      <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Message *</label>
      <textarea
        id="message"
        name="message"
        required
        placeholder="Tell us about your project..."
        class="w-full px-4 py-3 border-2 placeholder:text-gray-500 rounded-md outline-none h-36 focus:ring-2 border-gray-300 focus:border-blue-500 focus:ring-blue-100"
      ></textarea>
    </div>
    
    <Button id="submitButton" type="submit" size="lg" block class="bg-blue-500 hover:bg-blue-600 transition-colors w-full">
      Send Message
    </Button>
  </form>
  
  <p class="text-sm text-gray-600 mt-3 text-center">
    We will respond within 24 hours.
  </p>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Obtener referencias a los elementos del DOM
    const form = document.getElementById('contactForm');
    const successMessage = document.getElementById('successMessage');
    const errorMessage = document.getElementById('errorMessage');
    const submitButton = document.getElementById('submitButton');
    
    // Verificar que todos los elementos existan antes de continuar
    if (!form || !successMessage || !errorMessage || !submitButton) {
      console.error('No se encontraron todos los elementos necesarios del formulario');
      return;
    }
    
    // Interceptar el envío del formulario
    form.addEventListener('submit', function(e) {
      e.preventDefault(); // Prevenir el envío normal del formulario
      
      // Mostrar estado de carga
      submitButton.disabled = true;
      submitButton.innerHTML = 'Enviando...';
      
      // Obtener los datos del formulario
      const formData = new FormData(form);
      
      // Enviar los datos usando fetch
      fetch(form.action, {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json'
        }
      })
      .then(response => {
        // Independientemente de la respuesta, redirigir a nuestra página personalizada
        window.location.href = formData.get('_next') || '/thank-you';
      })
      .catch(error => {
        // En caso de error, mostrar mensaje de error
        errorMessage.classList.remove('hidden');
        submitButton.disabled = false;
        submitButton.innerHTML = 'Send Message';
      });
    });
  });
</script>
