---
interface Props {
  imageUrl: string;
  altText: string;
  height?: string;
}

const { imageUrl, altText = "Imagen decorativa", height = "500px" } = Astro.props;
---

<div class="scroll-reveal-container relative w-full overflow-hidden" style={`height: ${height};`}>
  <div class="scroll-reveal-image w-full h-full">
    <img 
      src={imageUrl} 
      alt={altText}
      class="w-full h-full object-cover"
      loading="lazy"
    />
  </div>
</div>

<style>
  .scroll-reveal-container {
    position: relative;
    overflow: hidden;
  }

  .scroll-reveal-image {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 1s ease-out, transform 1s ease-out;
    will-change: opacity, transform;
  }

  .scroll-reveal-image.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // Script para la animación de revelación al hacer scroll
  document.addEventListener('DOMContentLoaded', () => {
    const revealImage = document.querySelector('.scroll-reveal-image');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1
    });

    if (revealImage) {
      observer.observe(revealImage);
    }
  });
</script>
